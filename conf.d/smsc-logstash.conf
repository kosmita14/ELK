input {
  stdin{
    codec => multiline {
      pattern => "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3} :: "
      negate => true
      what => previous
    }
  }
}

filter {
  if([message] =~ "\/ 0 0 0 2 6 \/ O \/ 3 1 \/ 1 0 9 7 \/ 0 6 3 9 \/" or [message] =~ "U C P G W :   E M I   s y n t a x   e r r o r"){
    drop{}
  }

  grok{
    match => [
       "message", "%{GREEDYDATA:logtimestamp} :: [ \t]*%{NOTSPACE:code_file_name}\([ \t]*%{NUMBER:code_line_no}\)[ \t]+%{NOTSPACE:operationName}[ \t]+(prepareCString:|readCString:)\[%{GREEDYDATA:text}\]",
       "message", "%{GREEDYDATA:logtimestamp} :: [ \t]*%{NOTSPACE:code_file_name}\([ \t]*%{NUMBER:code_line_no}\)[ \t]+%{NOTSPACE:operationName}[ \t]+---- %{GREEDYDATA:text}",
       "message", "%{GREEDYDATA:logtimestamp} :: [ \t]*%{NOTSPACE:code_file_name}\([ \t]*%{NUMBER:code_line_no}\)[ \t]+%{NOTSPACE:operationName}[ \t]+%{GREEDYDATA:text}",
       "message", "%{GREEDYDATA:logtimestamp} :: %{GREEDYDATA:text}"
    ]

    remove_field => [ "message" ]
  }
  
  if([operationName] == "xxxx"){
    mutate{
        gsub => ["text", " [ ]{0,1}([^ ]+)", "\1"]
    }
  }

  if([operationName] == "logMessage"){
      json {
        source => "text"
        target => "message_json"
        remove_field => [ "text" ]
    }
  }
  
 # if([operationName] == "readCString"){
 #     if([text] =~ "parentReferenceId"){
 #         xml {
 #           source => "text"
 #           store_xml => "false"
 #           force_array => "false"
 #           xpath => ["/esb:SMSCCIMD03/header/parentReferenceId/value/text()","parentReferenceId"]
 #           xpath => ["/esb:SMSCCIMD03/header/relatedSession/value/text()","relatedSession"]
 #           xpath => ["/esb:SMSCCIMD03/header/postingUserId/id/value/text()","postingUserId"]
 #         }
 #     }
 # }
  
  date {
     match => [ "[logtimestamp]", "YYYY-MM-dd HH:mm:ss.SSSS", "YYYY-MM-dd HH:mm:ss.SSS"]
     timezone => "Europe/Warsaw"
  }
}

output {
    elasticsearch {
      hosts => [ "localhost:9200" ]
      index => "smsc-%{+YYYY.MM.dd}"
    }
    stdout { codec => rubydebug }
}
