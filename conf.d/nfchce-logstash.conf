input {
  beats {
    port => 5045
  }
}

filter {

  grok{
    match => [
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| SessionId=%{NOTSPACE:session_id} \| UserId=%{NOTSPACE:user_id} \| %{NOTSPACE:message_type} \| %{NUMBER:response_code} \| %{NUMBER:response_interval}ms.*Response headers:\{(?<message_header>[^}]*)\}%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| SessionId=%{NOTSPACE:session_id} \| UserId=%{NOTSPACE:user_id} \| %{NOTSPACE:message_type}.*(Response|Request) headers:\{(?<message_header>[^}]*)\}%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| Ver=%{NOTSPACE:ver} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| %{NOTSPACE:ip} \| %{NOTSPACE:message_type}.*(Response|Request) headers:\{(?<message_header>[^}]*)\}%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{GREEDYDATA:text}"
    ]

    remove_field => [ "message" ]
  }
  
  #/home/pi/Downloads/logi_nfc/01_nfc.api-2017-01-20.log
  if([logtimestamp] !~ "[0-9]{4}"){
    grok{
      match => [
        "source", "%{GREEDYDATA}api-(?<file_date>[0-9]{4}-[0-9]{2}-[0-9]{2})\.log" 
      ]
    }
    
    mutate {
      update => { "logtimestamp" => "%{file_date} %{logtimestamp}" }
      remove_field => [ "file_date" ]
    }
  }
  
#  if([message_header] != ""){
#    mutate{
#        gsub => [
#          "message_header", "([^=]+)=([^,]*), ", "\1=\2\|"
#        ]
#    }
    
#    kv {
#      field_split => "\|"
#      include_brackets => true
#      source => "message_header"
#      target => "header"
#    }
#  }

#  if([operationName] == "logMessage"){
#      json {
#        source => "text"
#        target => "message_json"
#        remove_field => [ "text" ]
#    }
#  }
  
 # if([operationName] == "readCString"){
 #     if([text] =~ "parentReferenceId"){
 #         xml {
 #           source => "text"
 #           store_xml => "false"
 #           force_array => "false"
 #           xpath => ["/esb:SMSCCIMD03/header/parentReferenceId/value/text()","parentReferenceId"]
 #           xpath => ["/esb:SMSCCIMD03/header/relatedSession/value/text()","relatedSession"]
 #           xpath => ["/esb:SMSCCIMD03/header/postingUserId/id/value/text()","postingUserId"]
 #         }
 #     }
 # }
  
  date {
     match => [ "[logtimestamp]", "YYYY-MM-dd HH:mm:ss.SSSS", "YYYY-MM-dd HH:mm:ss.SSS"]
     timezone => "Europe/Warsaw"
  }
}

output {
    elasticsearch {
      hosts => [ "localhost:9200" ]
      index => "nfchce-%{+YYYY.MM.dd}"
    }
    stdout { codec => rubydebug }
}
