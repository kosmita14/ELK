input {
  beats {
    port => 5045
  }    
}

filter {

#  truncate {
#    length_bytes => 4096
#    fields => "message"
#    add_tag => [ "ciachniete" ]
#  }

    mutate {
      gsub => ["message", "(^.{4096}).*$", "\1 ... truncated"]
#      add_tag => [ "truncated" ]
    }  

#ruby {
#  code => "
#    event.set('message', event.get('message')[0..4096]) if event.get('message').length > 4096
#    event.tag 'truncated'
#  "
#}

  grok{
    match => [
#      "message", "(?<logtimestamp>[^|]+)\|(?<level>[^|]*)\|(?<instance_id>[^|]*)\|(?<ip>[^|]*)\|(?<session_id>[^|]*)\|(?<user_id>[^|]*)\| (?<service_path>[^ ]*) \|%{GREEDYDATA:req_res}\|%{NOTSPACE:service_name}\|%{NOTSPACE:domain}\|%{NUMBER:time}ms\|%{GREEDYDATA:text}",
#      "message", "(?<logtimestamp>[^|]+)\|(?<level>[^|]*)\|(?<instance_id>[^|]*)\|(?<ip>[^|]*)\|(?<session_id>[^|]*)\|(?<user_id>[^|]*)\| (?<service_path>[^ ]*) \|%{GREEDYDATA:req_res}\|%{NOTSPACE:service_name}\|%{NOTSPACE:domain}\|%{GREEDYDATA:text}",
#      "message", "(?<logtimestamp>[^|]+)\|(?<level>[^|]*)\|(?<instance_id>[^|]*)\|(?<ip>[^|]*)\|(?<session_id>[^|]*)\|(?<user_id>[^|]*)\| (?<service_path>[^ ]*) %{GREEDYDATA:text}\|TIME:%{NUMBER:time}ms[\|,]STATUS:[ ]*%{NUMBER:status}",
      "message", "(?<logtimestamp>[^|]+)\|(?<level>[^|]*)\|(?<instance_id>[^|]*)\|(?<ip>[^|]*)\|(?<session_id>[^|]*)\|(?<user_id>[^|]*)\| (?<service_path>[^ ]*) %{GREEDYDATA:text}"
    ]

    remove_field => [ "message" ]
  }
  
  if([service_path] == "[com.asseco.esb.BusEsbSyncExecutor]"){
  
    grok{
      match => [
        "text", "\|%{GREEDYDATA:req_res}\|%{NOTSPACE:service_name}\|%{NOTSPACE:domain}\|%{NUMBER:time}ms\|%{GREEDYDATA:xml_text}",
        "text", "\|%{GREEDYDATA:req_res}\|%{NOTSPACE:service_name}\|%{NOTSPACE:domain}\|%{GREEDYDATA:xml_text}"
      ]

      remove_field => [ "text" ]
    }
  

    xml {
      source => "xml_text"
      store_xml => "false"
      force_array => "false"
      xpath => ["/ns:root/header/referenceId/value/text()","referenceId"]
      xpath => ["/ns:root/header/operationStatus/value/text()","operationStatus"]
      xpath => ["/ns:root/header","header"]
      xpath => ["/ns:root/selector","selector"]
      remove_field => ["xml_text"]
    }
  }
  
  date {
     match => [ "[logtimestamp]", "YYYY-MM-dd HH:mm:ss,SSS"]
     timezone => "Europe/Warsaw"
  }
}

output {
    elasticsearch {
      hosts => [ "localhost:9200" ]
      index => "niblog-%{+YYYY.MM.dd}"
    }

    stdout { codec => rubydebug }
}
